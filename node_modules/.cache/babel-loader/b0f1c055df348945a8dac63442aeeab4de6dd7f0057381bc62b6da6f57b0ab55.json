{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Porhc\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\oil\\\\client\\\\src\\\\components\\\\Mail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/mail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mail = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    subject: '',\n    text: ''\n  });\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8080/api/currentUser', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setFormData({\n            firstName: data.firstName,\n            lastName: data.lastName,\n            email: data.email,\n            subject: '',\n            text: ''\n          });\n        } else {\n          const error = await response.json();\n          setMessage(`Error: ${error.error}`);\n        }\n      } catch (error) {\n        setMessage(`Error: ${error.message}`);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/sendMail', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n          username: `${formData.firstName} ${formData.lastName}`,\n          userEmail: formData.email,\n          subject: formData.subject,\n          text: formData.text\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setMessage('Message sent successfully!');\n      } else {\n        setMessage(`Error: ${result.error}`);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mail-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.firstName,\n        onChange: e => setFormData({\n          ...formData,\n          firstName: e.target.value\n        }),\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        required: true,\n        disabled: !!localStorage.getItem('token') // Disable if user is logged in\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.lastName,\n        onChange: e => setFormData({\n          ...formData,\n          lastName: e.target.value\n        }),\n        placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n        required: true,\n        disabled: !!localStorage.getItem('token') // Disable if user is logged in\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        placeholder: \"Email\",\n        required: true,\n        disabled: !!localStorage.getItem('token') // Disable if user is logged in\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.subject,\n        onChange: e => setFormData({\n          ...formData,\n          subject: e.target.value\n        }),\n        placeholder: \"\\u0422\\u0435\\u043C\\u0430\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: formData.text,\n        onChange: e => setFormData({\n          ...formData,\n          text: e.target.value\n        }),\n        placeholder: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Mail, \"z6apZ2QXFPJOklS/gbhLXgeYahU=\");\n_c = Mail;\nexport default Mail;\nvar _c;\n$RefreshReg$(_c, \"Mail\");","map":{"version":3,"names":["React","useState","useEffect","Mail","formData","setFormData","firstName","lastName","email","subject","text","message","setMessage","fetchUserData","token","localStorage","getItem","response","fetch","headers","ok","data","json","error","handleSubmit","e","preventDefault","method","body","JSON","stringify","username","userEmail","result","target","value"],"sources":["C:/Users/Porhc/OneDrive/Рабочий стол/oil/client/src/components/Mail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/mail.css';\n\nconst Mail = () => {\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        subject: '',\n        text: ''\n    });\n\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                return;\n            }\n\n            try {\n                const response = await fetch('http://localhost:8080/api/currentUser', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setFormData({\n                        firstName: data.firstName,\n                        lastName: data.lastName,\n                        email: data.email,\n                        subject: '',\n                        text: ''\n                    });\n                } else {\n                    const error = await response.json();\n                    setMessage(`Error: ${error.error}`);\n                }\n            } catch (error) {\n                setMessage(`Error: ${error.message}`);\n            }\n        };\n\n        fetchUserData();\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const token = localStorage.getItem('token');\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n\n        if (token) {\n            headers['Authorization'] = `Bearer ${token}`;\n        }\n\n        try {\n            const response = await fetch('http://localhost:8080/api/sendMail', {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                    username: `${formData.firstName} ${formData.lastName}`,\n                    userEmail: formData.email,\n                    subject: formData.subject,\n                    text: formData.text\n                })\n            });\n\n            const result = await response.json();\n\n            if (response.ok) {\n                setMessage('Message sent successfully!');\n            } else {\n                setMessage(`Error: ${result.error}`);\n            }\n        } catch (error) {\n            setMessage(`Error: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"mail-form\">\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={formData.firstName}\n                    onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\n                    placeholder=\"Имя\"\n                    required\n                    disabled={!!localStorage.getItem('token')} // Disable if user is logged in\n                />\n                <input\n                    type=\"text\"\n                    value={formData.lastName}\n                    onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\n                    placeholder=\"Фамилия\"\n                    required\n                    disabled={!!localStorage.getItem('token')} // Disable if user is logged in\n                />\n                <input\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    placeholder=\"Email\"\n                    required\n                    disabled={!!localStorage.getItem('token')} // Disable if user is logged in\n                />\n                <input\n                    type=\"text\"\n                    value={formData.subject}\n                    onChange={(e) => setFormData({ ...formData, subject: e.target.value })}\n                    placeholder=\"Тема\"\n                    required\n                />\n                <textarea\n                    value={formData.text}\n                    onChange={(e) => setFormData({ ...formData, text: e.target.value })}\n                    placeholder=\"Сообщение\"\n                    required\n                ></textarea>\n                <button type=\"submit\">Отправить</button>\n            </form>\n\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default Mail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}