{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Porhc\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\oil\\\\client\\\\src\\\\components\\\\Password.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport avatar from '../assets/User.png';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { passwordValidate } from '../helper/validate';\nimport useFetch from '../hooks/fetch.hook';\nimport { useAuthStore } from '../store/store';\nimport { verifyPassword } from '../helper/helper';\nimport styles from '../styles/UserName.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Password() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    username\n  } = useAuthStore(state => state.auth);\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetch(`/user/${username}`);\n  const formik = useFormik({\n    initialValues: {\n      password: 'admin@123'\n    },\n    validate: passwordValidate,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      // console.log(values)\n      let loginPromise = verifyPassword({\n        username,\n        password: values.password\n      });\n      toast.promise(loginPromise, {\n        loading: 'Проверка',\n        success: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\\u044F \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0445\\u043E\\u0434\\u0438\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      });\n      loginPromise.then(res => {\n        let {\n          token\n        } = res.data;\n        localStorage.setItem('token', token);\n        navigate('/profile');\n      });\n    }\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-2xl font-bold\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 26\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-xl text-red-500\",\n    children: serverError.massage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-5xl fotn-bold\",\n            children: [\"\\u0417\\u0434\\u0440\\u0430\\u0432\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435 \", (apiData === null || apiData === void 0 ? void 0 : apiData.fisrstName) || (apiData === null || apiData === void 0 ? void 0 : apiData.username)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"py-4 text-xl w-2/3 text-center text-gray-500\",\n            children: \"\\u0423\\u0437\\u043D\\u0430\\u0439\\u0442\\u0435 \\u0431\\u043E\\u043B\\u044C\\u0448\\u0435, \\u0441\\u0432\\u044F\\u0437\\u0430\\u0432\\u0448\\u0438\\u0441\\u044C \\u0441 \\u043D\\u0430\\u043C\\u0438.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-1\",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile flex justify-center py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (apiData === null || apiData === void 0 ? void 0 : apiData.profile) || avatar,\n              className: styles.profile_img,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('password'),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"submit\",\n              children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: [\"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C? \", /*#__PURE__*/_jsxDEV(Link, {\n                className: \"text-red-500\",\n                to: \"/recover\",\n                children: \"\\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Password, \"h+mJGJgOwTODyloKQdepArd/S8s=\", false, function () {\n  return [useNavigate, useAuthStore, useFetch, useFormik];\n});\n_c = Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","Link","useNavigate","avatar","toast","Toaster","useFormik","passwordValidate","useFetch","useAuthStore","verifyPassword","styles","jsxDEV","_jsxDEV","Password","_s","navigate","username","state","auth","isLoading","apiData","serverError","formik","initialValues","password","validate","validateOnBlur","validateOnChange","onSubmit","values","loginPromise","promise","loading","success","children","fileName","_jsxFileName","lineNumber","columnNumber","error","then","res","token","data","localStorage","setItem","className","massage","position","reverseOrder","glass","fisrstName","handleSubmit","src","profile","profile_img","alt","getFieldProps","textbox","type","placeholder","btn","to","_c","$RefreshReg$"],"sources":["C:/Users/Porhc/OneDrive/Рабочий стол/oil/client/src/components/Password.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport avatar from '../assets/User.png';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport { passwordValidate } from '../helper/validate'\r\nimport useFetch from '../hooks/fetch.hook';\r\nimport { useAuthStore } from '../store/store';\r\nimport { verifyPassword } from '../helper/helper';\r\n\r\n\r\nimport styles from '../styles/UserName.module.css';\r\n\r\n\r\nexport default function Password() {\r\n\r\n    const navigate = useNavigate()\r\n    const { username } = useAuthStore(state => state.auth)\r\n    const [{isLoading, apiData, serverError}] = useFetch(`/user/${username}`)\r\n\r\n    const formik = useFormik({\r\n        initialValues : {\r\n          password : 'admin@123'\r\n        },\r\n        validate : passwordValidate,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit : async values => {\r\n            // console.log(values)\r\n            let loginPromise = verifyPassword({ username, password : values.password });\r\n            toast.promise(loginPromise, {\r\n                loading: 'Проверка',\r\n                success : <b>Авторизациия успешна</b>,\r\n                error : <b>Пароль не подходит</b>\r\n            })\r\n\r\n            loginPromise.then(res => {\r\n                let{ token } = res.data;\r\n                localStorage.setItem('token', token);\r\n                navigate('/profile')\r\n            })\r\n        }\r\n    })\r\n\r\n    if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\r\n    if(serverError) return <h1 className='text-xl text-red-500'>{serverError.massage}</h1>\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass}>\r\n                    <div className=\"title flex flex-col items-center\">\r\n                        <h4 className='text-5xl fotn-bold'>Здравствуйте {apiData?.fisrstName || apiData?.username}</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n                        Узнайте больше, связавшись с нами.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='py-1' onSubmit={formik.handleSubmit}>\r\n                        <div className='profile flex justify-center py-4'>\r\n                            <img src={apiData?.profile || avatar} className={styles.profile_img} alt=\"avatar\" />\r\n                        </div>\r\n\r\n                <div className=\"textbox flex flex-col items-center gap-6\">\r\n                  <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder='Пароль' />\r\n                  <button className={styles.btn} type='submit'>Войти</button>\r\n              </div>\r\n\r\n                           <div className=\"text-center py-4\">\r\n                            <span className='text-gray-500'>Забыли пароль? <Link className='text-red-500' to='/recover'>восстановить пароль</Link></span>\r\n                           </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}