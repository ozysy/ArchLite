{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Porhc/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/oil/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Porhc/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/oil/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import toast from'react-hot-toast';import{authenticate}from'./helper';// validate login page username\nexport function usernameValidate(_x){return _usernameValidate.apply(this,arguments);}// validate password\nfunction _usernameValidate(){_usernameValidate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(values){var errors,_yield$authenticate,status;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:errors=usernameVerify({},values);if(!values.username){_context.next=7;break;}_context.next=4;return authenticate(values.username);case 4:_yield$authenticate=_context.sent;status=_yield$authenticate.status;if(status!==200){errors.exist=toast.error('Пользователь не существует');}case 7:return _context.abrupt(\"return\",errors);case 8:case\"end\":return _context.stop();}}},_callee);}));return _usernameValidate.apply(this,arguments);}export function passwordValidate(_x2){return _passwordValidate.apply(this,arguments);}// validate reset password\nfunction _passwordValidate(){_passwordValidate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(values){var errors;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:errors=passwordVerify({},values);return _context2.abrupt(\"return\",errors);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _passwordValidate.apply(this,arguments);}export function resetPasswordValidation(_x3){return _resetPasswordValidation.apply(this,arguments);}// validate register form\nfunction _resetPasswordValidation(){_resetPasswordValidation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(values){var errors;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:errors=passwordVerify({},values);if(values.password!==values.confirm_pwd){errors.exist=toast.error(\"Пароли не совпадают\");}return _context3.abrupt(\"return\",errors);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return _resetPasswordValidation.apply(this,arguments);}export function registerValidation(_x4){return _registerValidation.apply(this,arguments);}/** validate profile page */function _registerValidation(){_registerValidation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(values){var errors;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:errors=usernameVerify({},values);passwordVerify(errors,values);emailVerify(errors,values);return _context4.abrupt(\"return\",errors);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _registerValidation.apply(this,arguments);}export function profileValidation(_x5){return _profileValidation.apply(this,arguments);}// *******************************************************************************\n// validate password\nfunction _profileValidation(){_profileValidation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(values){var errors;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:errors=emailVerify({},values);return _context5.abrupt(\"return\",errors);case 2:case\"end\":return _context5.stop();}}},_callee5);}));return _profileValidation.apply(this,arguments);}function passwordVerify(){var errors=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var values=arguments.length>1?arguments[1]:undefined;/* eslint-disable no-useless-escape */var specialChars=/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;if(!values.password){errors.password=toast.error(\"Требуется пароль!\");}else if(values.password.includes(\" \")){errors.password=toast.error(\"Неправильный пароль!\");}else if(values.password.length<4){errors.password=toast.error(\"Пароль должен быть длиннее 4 символов\");}else if(!specialChars.test(values.password)){errors.password=toast.error(\"Пароль должен иметь специальный символ\");}return errors;}// validate username\nfunction usernameVerify(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var values=arguments.length>1?arguments[1]:undefined;if(!values.username){error.username=toast.error('Требуется имя пользователя!');}else if(values.username.includes(\" \")){error.username=toast.error('Неверное имя пользователя!');}return error;}// validate email\nfunction emailVerify(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var values=arguments.length>1?arguments[1]:undefined;if(!values.email){error.email=toast.error(\"Требуется электронная почта!\");}else if(values.email.includes(\" \")){error.email=toast.error(\"Неправильный адрес электронной почты!\");}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){error.email=toast.error(\"Неверный адрес электронной почты!\");}return error;}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","exist","error","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","registerValidation","emailVerify","profileValidation","specialChars","includes","length","test","email"],"sources":["C:/Users/Porhc/OneDrive/Рабочий стол/oil/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\nimport { authenticate } from './helper'\r\n\r\n// validate login page username\r\n\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify({}, values);\r\n\r\n    if(values.username){\r\n        //check user exist or not\r\n        const { status } = await authenticate(values.username);\r\n\r\n        if(status !== 200){\r\n            errors.exist = toast.error('Пользователь не существует')\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// validate password\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n// validate reset password\r\nexport async function resetPasswordValidation(values) {\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"Пароли не совпадают\")\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// validate register form\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate profile page */\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n// *******************************************************************************\r\n\r\n// validate password\r\nfunction passwordVerify(errors = {}, values){\r\n    /* eslint-disable no-useless-escape */\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        errors.password = toast.error(\"Требуется пароль!\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password = toast.error(\"Неправильный пароль!\");\r\n    }else if(values.password.length < 4){\r\n        errors.password = toast.error(\"Пароль должен быть длиннее 4 символов\");\r\n    }else if(!specialChars.test(values.password)){\r\n        errors.password = toast.error(\"Пароль должен иметь специальный символ\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// validate username\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Требуется имя пользователя!');\r\n    }else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Неверное имя пользователя!')\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n// validate email\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Требуется электронная почта!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Неправильный адрес электронной почты!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Неверный адрес электронной почты!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}