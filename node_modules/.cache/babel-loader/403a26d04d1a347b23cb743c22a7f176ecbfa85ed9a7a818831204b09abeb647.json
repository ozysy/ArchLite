{"ast":null,"code":"import toast from'react-hot-toast';import{authenticate}from'./helper';// validate login page username\nexport async function usernameValidate(values){const errors=usernameVerify({},values);if(values.username){//check user exist or not\nconst{status}=await authenticate(values.username);if(status!==200){errors.exist=toast.error('Пользователь не существует');}}return errors;}// validate password\nexport async function passwordValidate(values){const errors=passwordVerify({},values);return errors;}// validate reset password\nexport async function resetPasswordValidation(values){const errors=passwordVerify({},values);if(values.password!==values.confirm_pwd){errors.exist=toast.error(\"Пароли не совпадают\");}return errors;}// validate register form\nexport async function registerValidation(values){const errors=usernameVerify({},values);passwordVerify(errors,values);emailVerify(errors,values);return errors;}/** validate profile page */export async function profileValidation(values){const errors=emailVerify({},values);return errors;}// *******************************************************************************\n// validate password\nfunction passwordVerify(){let errors=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let values=arguments.length>1?arguments[1]:undefined;/* eslint-disable no-useless-escape */const specialChars=/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;if(!values.password){errors.password=toast.error(\"Требуется пароль!\");}else if(values.password.includes(\" \")){errors.password=toast.error(\"Неправильный пароль!\");}else if(values.password.length<4){errors.password=toast.error(\"Пароль должен быть длиннее 4 символов\");}else if(!specialChars.test(values.password)){errors.password=toast.error(\"Пароль должен иметь специальный символ\");}return errors;}// validate username\nfunction usernameVerify(){let error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let values=arguments.length>1?arguments[1]:undefined;if(!values.username){error.username=toast.error('Требуется имя пользователя!');}else if(values.username.includes(\" \")){error.username=toast.error('Неверное имя пользователя!');}return error;}// validate email\nfunction emailVerify(){let error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let values=arguments.length>1?arguments[1]:undefined;if(!values.email){error.email=toast.error(\"Требуется электронная почта!\");}else if(values.email.includes(\" \")){error.email=toast.error(\"Неправильный адрес электронной почты!\");}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){error.email=toast.error(\"Неверный адрес электронной почты!\");}return error;}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","exist","error","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","registerValidation","emailVerify","profileValidation","arguments","length","undefined","specialChars","includes","test","email"],"sources":["C:/Users/Porhc/OneDrive/Рабочий стол/oil/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\nimport { authenticate } from './helper'\r\n\r\n// validate login page username\r\n\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify({}, values);\r\n\r\n    if(values.username){\r\n        //check user exist or not\r\n        const { status } = await authenticate(values.username);\r\n\r\n        if(status !== 200){\r\n            errors.exist = toast.error('Пользователь не существует')\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// validate password\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n// validate reset password\r\nexport async function resetPasswordValidation(values) {\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"Пароли не совпадают\")\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// validate register form\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate profile page */\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n// *******************************************************************************\r\n\r\n// validate password\r\nfunction passwordVerify(errors = {}, values){\r\n    /* eslint-disable no-useless-escape */\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        errors.password = toast.error(\"Требуется пароль!\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password = toast.error(\"Неправильный пароль!\");\r\n    }else if(values.password.length < 4){\r\n        errors.password = toast.error(\"Пароль должен быть длиннее 4 символов\");\r\n    }else if(!specialChars.test(values.password)){\r\n        errors.password = toast.error(\"Пароль должен иметь специальный символ\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// validate username\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Требуется имя пользователя!');\r\n    }else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Неверное имя пользователя!')\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n// validate email\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Требуется электронная почта!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Неправильный адрес электронной почты!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Неверный адрес электронной почты!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}