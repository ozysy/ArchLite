[{"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\index.js":"1","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\App.js":"2","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\UserName.js":"3","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Recovery.js":"4","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Register.js":"5","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Reset.js":"6","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\PageNotFound.js":"7","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Profile.js":"8","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Password.js":"9","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\helper\\validate.js":"10","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\helper\\convert.js":"11","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\store\\store.js":"12","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\helper\\helper.js":"13","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\hooks\\fetch.hook.js":"14","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\middleware\\auth.js":"15","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Main.js":"16","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\MainContent.js":"17","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Header.js":"18","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Footer.js":"19","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Username.js":"20","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Product.js":"21","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Carousel.js":"22","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Filters.js":"23","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\projects.js":"24"},{"size":240,"mtime":1716412653688,"results":"25","hashOfConfig":"26"},{"size":1378,"mtime":1718897636966,"results":"27","hashOfConfig":"26"},{"size":2717,"mtime":1718215217664,"results":"28","hashOfConfig":"26"},{"size":3757,"mtime":1718460800714,"results":"29","hashOfConfig":"26"},{"size":3700,"mtime":1718477002505,"results":"30","hashOfConfig":"26"},{"size":3219,"mtime":1718469608440,"results":"31","hashOfConfig":"26"},{"size":132,"mtime":1718215696009,"results":"32","hashOfConfig":"26"},{"size":5130,"mtime":1718477092815,"results":"33","hashOfConfig":"26"},{"size":3407,"mtime":1718215840948,"results":"34","hashOfConfig":"26"},{"size":3082,"mtime":1717967542540,"results":"35","hashOfConfig":"26"},{"size":395,"mtime":1716425404631,"results":"36","hashOfConfig":"26"},{"size":252,"mtime":1717967770318,"results":"37","hashOfConfig":"26"},{"size":4028,"mtime":1718618903454,"results":"38","hashOfConfig":"26"},{"size":1248,"mtime":1718455262130,"results":"39","hashOfConfig":"26"},{"size":537,"mtime":1718455554187,"results":"40","hashOfConfig":"26"},{"size":316,"mtime":1718556434122,"results":"41","hashOfConfig":"26"},{"size":937,"mtime":1718563759293,"results":"42","hashOfConfig":"26"},{"size":2351,"mtime":1718898028956,"results":"43","hashOfConfig":"26"},{"size":258,"mtime":1718556695775,"results":"44","hashOfConfig":"26"},{"size":2717,"mtime":1718215217664,"results":"45","hashOfConfig":"46"},{"size":642,"mtime":1718783488501,"results":"47","hashOfConfig":"26"},{"size":5424,"mtime":1718813182693,"results":"48","hashOfConfig":"26"},{"size":824,"mtime":1718783341818,"results":"49","hashOfConfig":"26"},{"size":1507,"mtime":1718783451193,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1b9pzzp",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hqruw0",{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\index.js",[],[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\App.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\UserName.js",["129"],[],"import React, { useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport avatar from '../assets/User.png';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport{ usernameValidate } from '../helper/validate';\r\nimport { useAuthStore } from '../store/store'\r\n\r\nimport styles from '../styles/UserName.module.css';\r\n\r\n\r\nexport default function Username() {\r\n\r\n    const navigate = useNavigate();\r\n    const setUsername = useAuthStore(state => state.setUsername);\r\n    // const username = useAuthStore(state => state.auth.username);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(username)\r\n    // }) \r\n    const formik = useFormik({\r\n        initialValues : {\r\n          username : 'ozysy'\r\n        },\r\n        validate : usernameValidate,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit : async values => {\r\n            // console.log(values)\r\n            setUsername(values.username);\r\n            navigate('/password');\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass}>\r\n                    <div className=\"title flex flex-col items-center\">\r\n                        <h4 className='text-5xl fotn-bold'>Здравствуйте!</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n                        Узнайте больше, присоединившись к нам.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='py-1' onSubmit={formik.handleSubmit}>\r\n                        <div className='profile flex justify-center py-4'>\r\n                            <img src={avatar} className={styles.profile_img} alt=\"avatar\" />\r\n                        </div>\r\n\r\n                <div className=\"textbox flex flex-col items-center gap-6\">\r\n                  <input {...formik.getFieldProps('username')} className={styles.textbox} type=\"text\" placeholder='Username' />\r\n                  <button className={styles.btn} type='submit'>продолжить</button>\r\n              </div>\r\n\r\n                           <div className=\"text-center py-4\">\r\n                            <span className='text-gray-500'>Не зарегистрированы <Link className='text-red-500' to='/register'>Зарегистрироваться</Link></span>\r\n                           </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Recovery.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Register.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Reset.js",["130","131"],[],"import React, { useEffect } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport{ resetPasswordValidation } from '../helper/validate';\r\nimport { resetPassword } from '../helper/helper';\r\nimport { useAuthStore } from '../store/store';\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport useFetch from '../hooks/fetch.hook'\r\n\r\nimport styles from '../styles/UserName.module.css';\r\n\r\n\r\nexport default function Reset() {\r\n\r\n    const { username } = useAuthStore(state => state.auth);\r\n    const navigate = useNavigate();\r\n    const [{isLoading, apiData, status, serverError }] = useFetch('createResetSession')\r\n\r\n    // useEffect(() =>{\r\n    //      console.log(apiData)\r\n    // })\r\n\r\n    const formik = useFormik({\r\n        initialValues : {\r\n          password : '',\r\n          confirm_pwd:''\r\n        },\r\n        validate : resetPasswordValidation,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit : async values => {\r\n            // console.log(values)\r\n\r\n            let resetPromise = resetPassword({ username, password: values.password })\r\n\r\n            toast.promise(resetPromise, {\r\n                loading: 'Обновление',\r\n                success: <b>Сброс пароля успешен</b>,\r\n                error: <b>не получилось сбросить пароль</b>\r\n            });\r\n\r\n            resetPromise.then(function(){ navigate('/password')})\r\n\r\n        }\r\n    })\r\n\r\n    \r\n    if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\r\n    if(serverError) return <h1 className='text-xl text-red-500'>{serverError.massage}</h1>\r\n    if(status && status !== 201) return <Navigate to={'/password'}></Navigate>\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass} style={{ width : \"50%\"}}>\r\n                    <div className=\"title flex flex-col items-center\">\r\n                        <h4 className='text-5xl fotn-bold'>Восстановление пароля</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n                            Введите новый пароль.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='pt-20' onSubmit={formik.handleSubmit}>\r\n\r\n\r\n                <div className=\"textbox flex flex-col items-center gap-6\">\r\n\r\n                    <div className=\"input text-center\">\r\n                  <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder='Новый пароль' />\r\n                  <input {...formik.getFieldProps('confirm_pwd')} className={styles.textbox} type=\"text\" placeholder='Повторите пароль' />\r\n                  </div>\r\n\r\n                  <button className={styles.btn} type='submit'>Восстановить</button>\r\n              </div>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\PageNotFound.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Profile.js",["132"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport avatar from '../assets/User.png';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport{ profileValidation } from '../helper/validate';\r\nimport convertToBase64 from '../helper/convert';\r\nimport useFetch from '../hooks/fetch.hook';\r\nimport { updateUser } from '../helper/helper';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport styles from '../styles/UserName.module.css';\r\nimport extend from '../styles/profile.model.css'\r\n\r\n\r\nexport default function Profile() {\r\n\r\n    const [file, setFile] = useState();\r\n    // const { username } = useAuthStore(state => state.auth);\r\n    const [{isLoading, apiData, serverError}] = useFetch()\r\n    const navigate = useNavigate()\r\n\r\n    const formik = useFormik({\r\n        initialValues : {\r\n            firstName : apiData?.firstName || '',\r\n            lastName : apiData?.lastName || '',\r\n            email : apiData?.email || '',\r\n            mobile: apiData?.mobile || '',\r\n            address : apiData?.address || ''\r\n        },\r\n        enableReinitialize: true,\r\n        validate : profileValidation,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit : async values => {\r\n\r\n        \r\n            values = await Object.assign(values, { profile : file || apiData?.profile || ''})\r\n            let updatePromise = updateUser(values);\r\n\r\n            toast.promise(updatePromise, {\r\n                loading: 'Обновление',\r\n                success : <b>Профиль успешно обновлен</b>,\r\n                error : <b>Невозможно обновить</b>\r\n            });\r\n\r\n            console.log(values)\r\n        }\r\n    })\r\n\r\n// не поддержтвается файл\r\n\r\n    const onUpload = async e => {\r\n        const base64 = await convertToBase64(e.target.files[0]);\r\n        setFile(base64);\r\n    }\r\n\r\n    //ручной выход\r\n    function userLogout(){\r\n        localStorage.removeItem('token');\r\n        navigate('/Username');\r\n    }\r\n\r\n    if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\r\n    if(serverError) return <h1 className='text-xl text-red-500'>{serverError.massage}</h1>\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n            <div className='flex justify-center items-center h-screen'>\r\n            <div className={`${styles.glass} ${extend.glass}`} style={{ width: \"45%\", paddingTop: '3em'}}>\r\n                    \r\n                    <div className=\"title flex flex-col items-center\">\r\n                        <h4 className='text-5xl fotn-bold'>Профиль</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n                            Вы можете обновить свои данные.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='py-1' onSubmit={formik.handleSubmit}>\r\n                    <div className='profile flex justify-center py-4'>\r\n                  <label htmlFor=\"profile\">\r\n                  <img src={apiData?.profile || file || avatar} className={`${styles.profile_img} ${extend.profile_img}`} alt=\"avatar\" />\r\n                  </label>\r\n                  \r\n                  <input onChange={onUpload} type=\"file\" id='profile' name='profile' />\r\n              </div>\r\n\r\n                <div className=\"textbox flex flex-col items-center gap-6\">\r\n                    <div className=\"name flex w-3/4 gap-10\">\r\n                        <input {...formik.getFieldProps('firstName')} className={`${styles.textbox} ${extend.textbox}`} type=\"text\" placeholder='Имя' />\r\n                        <input {...formik.getFieldProps('lastName')} className={`${styles.textbox} ${extend.textbox}`} type=\"text\" placeholder='Фамилия' />\r\n                     </div>\r\n                     \r\n                     <div className=\"name flex w-3/4 gap-10\">\r\n                        <input {...formik.getFieldProps('mobile')} className={`${styles.textbox} ${extend.textbox}`} type=\"text\" placeholder='номер телефона' />\r\n                        <input {...formik.getFieldProps('email')} className={`${styles.textbox} ${extend.textbox}`} type=\"text\" placeholder='Email' />\r\n                    </div>\r\n\r\n                        <input {...formik.getFieldProps('address')} className={`${styles.textbox} ${extend.textbox}`} type=\"text\" placeholder='Адрес' />\r\n                        <button className={styles.btn} type='submit'>Обновить профиль</button>\r\n                  \r\n              </div>\r\n\r\n                           <div className=\"text-center py-4\">\r\n                            <span className='text-gray-500'>Приходите позже <button onClick={userLogout} className='text-red-500' to='/Username'>Выйти</button></span>\r\n                           </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Password.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\helper\\validate.js",[],["133","134"],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\helper\\convert.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\store\\store.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\helper\\helper.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\hooks\\fetch.hook.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\middleware\\auth.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Main.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\MainContent.js",["135"],[],"import React from 'react';\r\nimport '../styles/main.css';\r\nimport image from '../img/main.png';\r\n\r\nconst MainContent = () => {\r\n    return (\r\n        <main className=\"main-content\">\r\n            <img src={image} alt=\"Building Image\" className=\"main-image\" />\r\n            <p className=\"main-text\">\r\n                Всё началось в тот солнечный день, когда я, прогуливаясь по узким улочкам старого города, наткнулся на заброшенное здание с потрясающей аркой. Меня охватило вдохновение, и я понял: хочу создать нечто, что оживит такие уголки, придаст им новую жизнь. Так родилась идея моей архитектурной мастерской.\r\n            </p>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default MainContent;\r\n","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Header.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Footer.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Username.js",["136"],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Product.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Carousel.js",["137"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport '../styles/projects.css';\r\nimport image from '../img/slide1.png';\r\nimport image2 from '../img/slide2.png';\r\nimport image3 from '../img/slide3.png';\r\nimport image4 from '../img/slide4.png';\r\nimport image5 from '../img/slide5.png';\r\n\r\nconst Carousel = () => {\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [startX, setStartX] = useState(0);\r\n    const [startScrollLeft, setStartScrollLeft] = useState(0);\r\n    const carouselRef = useRef(null);\r\n    const autoScrollIntervalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const carousel = carouselRef.current;\r\n        const firstCardWidth = carousel.querySelector('.card').offsetWidth;\r\n        const cards = carousel.querySelectorAll('.card');\r\n\r\n        // Clone first and last few cards to create infinite loop illusion\r\n        const firstFewCards = Array.from(cards).slice(0, 3);\r\n        const lastFewCards = Array.from(cards).slice(-3);\r\n\r\n        lastFewCards.forEach(card => {\r\n            carousel.insertAdjacentHTML('afterbegin', card.outerHTML);\r\n        });\r\n\r\n        firstFewCards.forEach(card => {\r\n            carousel.insertAdjacentHTML('beforeend', card.outerHTML);\r\n        });\r\n\r\n        const startAutoScroll = () => {\r\n            if (autoScrollIntervalRef.current) clearInterval(autoScrollIntervalRef.current);\r\n            autoScrollIntervalRef.current = setInterval(() => {\r\n                if (!isDragging) {\r\n                    carousel.scrollLeft += firstCardWidth;\r\n                }\r\n            }, 5000); // Change slide every 3 seconds\r\n        };\r\n\r\n        startAutoScroll();\r\n\r\n        const dragStart = (e) => {\r\n            setIsDragging(true);\r\n            setStartX(e.pageX || e.touches[0].pageX);\r\n            setStartScrollLeft(carousel.scrollLeft);\r\n            if (autoScrollIntervalRef.current) clearInterval(autoScrollIntervalRef.current); // Stop auto scroll while dragging\r\n        };\r\n\r\n        const dragging = (e) => {\r\n            if (!isDragging) return;\r\n            const x = e.pageX || e.touches[0].pageX;\r\n            carousel.scrollLeft = startScrollLeft - (x - startX);\r\n        };\r\n\r\n        const dragStop = () => {\r\n            setIsDragging(false);\r\n            startAutoScroll(); // Restart auto scroll after dragging\r\n        };\r\n\r\n        const infiniteScroll = () => {\r\n            if (carousel.scrollLeft === 0) {\r\n                carousel.classList.add(\"no-transition\");\r\n                carousel.scrollLeft = carousel.scrollWidth - (2 * carousel.offsetWidth);\r\n                carousel.classList.remove(\"no-transition\");\r\n            } else if (Math.ceil(carousel.scrollLeft) === carousel.scrollWidth - carousel.offsetWidth) {\r\n                carousel.classList.add(\"no-transition\");\r\n                carousel.scrollLeft = carousel.offsetWidth;\r\n                carousel.classList.remove(\"no-transition\");\r\n            }\r\n        };\r\n\r\n        carousel.addEventListener('mousedown', dragStart);\r\n        carousel.addEventListener('mousemove', dragging);\r\n        document.addEventListener('mouseup', dragStop);\r\n        carousel.addEventListener('touchstart', dragStart);\r\n        carousel.addEventListener('touchmove', dragging);\r\n        document.addEventListener('touchend', dragStop);\r\n        carousel.addEventListener('scroll', infiniteScroll);\r\n\r\n        return () => {\r\n            carousel.removeEventListener('mousedown', dragStart);\r\n            carousel.removeEventListener('mousemove', dragging);\r\n            document.removeEventListener('mouseup', dragStop);\r\n            carousel.removeEventListener('touchstart', dragStart);\r\n            carousel.removeEventListener('touchmove', dragging);\r\n            document.removeEventListener('touchend', dragStop);\r\n            carousel.removeEventListener('scroll', infiniteScroll);\r\n            if (autoScrollIntervalRef.current) clearInterval(autoScrollIntervalRef.current);\r\n        };\r\n    }, [isDragging]);\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <i id=\"left\" className=\"fa-solid fa-angle-left\" onClick={() => (carouselRef.current.scrollLeft -= carouselRef.current.querySelector('.card').offsetWidth)}></i>\r\n            <ul className=\"carousel\" ref={carouselRef}>\r\n                <li className=\"card\">\r\n                    <div className=\"img\"><img src={image} alt=\"slide1\" className=\"slide1\" draggable=\"false\" /></div>\r\n                </li>\r\n                <li className=\"card\">\r\n                    <div className=\"img\"><img src={image2} alt=\"slide2\" className=\"slide2\" draggable=\"false\" /></div>\r\n                </li>\r\n                <li className=\"card\">\r\n                    <div className=\"img\"><img src={image3} alt=\"slide3\" className=\"slide3\" draggable=\"false\" /></div>\r\n                </li>\r\n                <li className=\"card\">\r\n                    <div className=\"img\"><img src={image4} alt=\"slide4\" className=\"slide4\" draggable=\"false\" /></div>\r\n                </li>\r\n                <li className=\"card\">\r\n                    <div className=\"img\"><img src={image5} alt=\"slide5\" className=\"slide5\" draggable=\"false\" /></div>\r\n                </li>\r\n            </ul>\r\n            <i id=\"right\" className=\"fa-solid fa-angle-right\" onClick={() => (carouselRef.current.scrollLeft += carouselRef.current.querySelector('.card').offsetWidth)}></i>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Carousel;\r\n","C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\Filters.js",[],[],"C:\\Users\\Porhc\\OneDrive\\Рабочий стол\\oil\\client\\src\\components\\projects.js",[],[],{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"142","line":17,"column":24,"nodeType":"140","messageId":"141","endLine":17,"endColumn":31},{"ruleId":"138","severity":1,"message":"143","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":59,"column":44,"nodeType":"146","messageId":"147","endLine":59,"endColumn":45,"suggestions":"148","suppressions":"149"},{"ruleId":"144","severity":1,"message":"150","line":59,"column":61,"nodeType":"146","messageId":"147","endLine":59,"endColumn":62,"suggestions":"151","suppressions":"152"},{"ruleId":"153","severity":1,"message":"154","line":8,"column":13,"nodeType":"155","endLine":8,"endColumn":76},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":92,"column":8,"nodeType":"158","endLine":92,"endColumn":20,"suggestions":"159"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'apiData' is assigned a value but never used.","'Link' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["160","161"],["162"],"Unnecessary escape character: \\/.",["163","164"],["165"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'startScrollLeft' and 'startX'. Either include them or remove the dependency array.","ArrayExpression",["166"],{"messageId":"167","fix":"168","desc":"169"},{"messageId":"170","fix":"171","desc":"172"},{"kind":"173","justification":"174"},{"messageId":"167","fix":"175","desc":"169"},{"messageId":"170","fix":"176","desc":"172"},{"kind":"173","justification":"174"},{"desc":"177","fix":"178"},"removeEscape",{"range":"179","text":"174"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"180","text":"181"},"Replace the `\\` with `\\\\` to include the actual backslash character.","directive","",{"range":"182","text":"174"},{"range":"183","text":"181"},"Update the dependencies array to be: [isDragging, startScrollLeft, startX]",{"range":"184","text":"185"},[1525,1526],[1525,1525],"\\",[1542,1543],[1542,1542],[3973,3985],"[isDragging, startScrollLeft, startX]"]